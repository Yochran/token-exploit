#pragma once

#ifndef LIST_H
#define LIST_H
#endif

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/stat.h>

/**
 * @brief Execute command
 * 
 * @param argc - argument count
 * @param argv - argument array
 */
void list(int argc, char *argv[])
{
    // check argument length
    if (argc != 2)
    {
        printf("%s\n", "Incorrect Usage!\nlist <data>");
        return;
    }

    // get selection
    char *selection = argv[1];

    // get file name
    char filename[64] = "";
    sprintf(filename, "%s.json", selection);

    // check if file exists
    struct stat stat_buffer;
    if (stat(filename, &stat_buffer) != 0)
    {
        printf("%s\n", "That data does not exist.");
        return;
    }

    // open file
    FILE *file = fopen(filename, "r");

    // get file size
    fseek(file, 0, SEEK_END);
    long size = ftell(file);
    fseek(file, 0, SEEK_SET);
    
    // read from file
    char content[size + 10];
    strcpy(content, "CONTENT:\n");
    char buffer[size];
    while (fgets(buffer, sizeof(buffer), file))
        strcat(content, buffer);

    // clear screen
    system("clear");

    // print data
    printf("%s\n", content);

    // close file
    fclose(file);

    // delete file
    char command[64];
    sprintf(command, "rm -f %s", filename);
    system(command);

    // free memory
    strcpy(selection, "");
    strcpy(filename, "");
    strcpy(content, "");
    strcpy(buffer, "");
    strcpy(command, "");
}